<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--
        Spring MVC 中如果配置了 <mvc:annotation-driven> ，则所有的 Controller 就会被解析，所以相应的请求就会被 Controller 处理，
        因此这个配置至关重要。当请求没有匹配到处理类（其中包括没有配置 <mvc:annotation-driven> 或者 访问的是静态资源文件）时，
        就会去找 <mvc:default-servlet-handler> （处理静态资源文件）配置的 DefaultServletHttpRequestHandler 默认处理器处理了

        <mvc:annotation-driven />：使用默认的servlet来响应静态文件，建议放在开始；
        <mvc:default-servlet-handler/>：放在注解处理映射器的后面，可以直接放在文件最后面

        TODO 如果配置了<mvc:default-servlet-handler/>，但没配置<mvc:annotation-driven/>会导致静态资源可以访问，controller不能访问
    -->
    <mvc:annotation-driven/>
    <!--
        SpringMVC的处理器对应的bean必须按照规范格式开发，未避免加入无效的bean可通过bean加载过滤器进行包含设定或排除设定，表现层bean标注通常设定为@Controller

        业务层与数据层bean加载有Spring控制，参照Spring加载方式
        表现层bean加载由SpringMVC单独控制
            1.表现层处理器bean使用注解@Controller声明
            2.bean加载控制使用包含性过滤器
            3.过滤器类型为通过注解进行过滤
            4.过滤的注解名称为Controller
    -->
    <context:component-scan base-package="com.cw">
        <!-- 只加载使用@Controller标注的bean -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--
        核心控制器拦截的是所有请求，需要对静态资源请求进行放行，通过配置放行资源实现
    -->
    <!--放行指定类型静态资源配置方式-->
    <!--<mvc:resources mapping="/img/**" location="/img/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>-->

    <!--SpringMVC提供的通用资源放行方式,可以放行所有普通资源-->
    <mvc:default-servlet-handler/>

</beans>